///////////////////////////////////////////////////////////
//  XmlTemperatureReader.cs
//  Implementation of the Class XmlTemperatureReader
//  Generated by Enterprise Architect
//  Created on:      09-Feb-2009 4:45:30 PM
//  Original author: Gary
///////////////////////////////////////////////////////////



using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Xml.Linq;
using Bortosky.Samples.Temperature.DataService.DataLayer;

namespace Bortosky.Samples.Temperature.DataService.DataLayer {
	public class XmlTemperatureReader : ITemperatureReader {
        private XDocument temperatureData;
		public XmlTemperatureReader(){
            this.temperatureData = XDocument.Load(Path.Combine(Path.GetDirectoryName(Assembly.GetExecutingAssembly().CodeBase), "temps.xml"));
		}

		/// 
		/// <param name="stationId">The station identifer from the National Climatic Data
		/// Center</param>
		/// <param name="year"></param>
		/// <param name="month"></param>
		/// <param name="day"></param>
		/// <param name="days">The days to return, note you may receive less than this
		/// number if data is missing from the source. The last date returned will be this
		/// many days past the specified start date</param>
        public TemperatureResponse GetTemperaturesByDate(string stationId, int year, int month, int day, int days)
        {
            DateTime date = new DateTime(year, month, day);
            TemperatureResponse r = new TemperatureResponse();
            var query =
                from item in this.temperatureData.Root.Descendants("DBROW")
                where (item.Element("STATION_ID").Value.CompareTo(stationId) == 0 && item.Element("YEARMODA").Value.CompareTo(date.ToString("yyyyMMdd")) >= 0) && (item.Element("YEARMODA").Value.CompareTo(date.AddDays(days).ToString("yyyyMMdd")) < 0)
                orderby (string)item.Element("YEARMODA")
                select new DateRangeType()
                {
                    RangeDate = new System.DateTime(int.Parse(item.Element("YEARMODA").Value.Substring(0, 4)), int.Parse(item.Element("YEARMODA").Value.Substring(4, 2)), int.Parse(item.Element("YEARMODA").Value.Substring(6, 2))).ToString("s"),
                    Range = new TemperatureRangeType()
                    {
                        Minimum = float.Parse(item.Element("MINTEMP").Value),
                        Maximum = float.Parse(item.Element("MAXTEMP").Value)
                    }
                };
            r.DateRange = query.ToArray<DateRangeType>();
            return r;
        }

	}//end XmlTemperatureReader

}//end namespace DataLayer