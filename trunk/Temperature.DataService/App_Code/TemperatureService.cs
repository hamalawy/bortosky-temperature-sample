///////////////////////////////////////////////////////////
//  TemperatureService.cs
//  Implementation of the Class TemperatureService
//  Generated by Enterprise Architect
//  Created on:      05-Feb-2009 3:21:40 PM
//  Original author: Gary
///////////////////////////////////////////////////////////




using System;
using System.Collections.Generic;
using Bortosky.Samples.Temperature.DataService;
using Bortosky.Samples.Temperature.Data;
namespace Bortosky.Samples.Temperature.DataService
{
    public class TemperatureService : ITemperatureService
    {

        public TemperatureService()
        {

        }

        /// <summary>
        /// Uses primitives for date parts instead of System.DateTime for platform
        /// independence
        /// </summary>
        /// <param name="year"></param>
        /// <param name="month"></param>
        /// <param name="day"></param>
        /// <param name="days">The days after the start date to return.  The date of the
        /// last DateTemperatureRange returned will be <= the start date plus this value.
        /// </param>
        public List<DateTemperatures> GetTemperaturesByDate(string stationId, int year, int month, int day, int days)
        {
            IDataService s = new XmlDataService();
            List<DateTemperatures> ldt = new List<DateTemperatures>();
            foreach (DateTemperatureRange r in s.GetTemperaturesByDate(stationId, new DateTime(year, month, day), days))
            {
                ldt.Add(new DateTemperatures() { SubjectDate = r.RangeDateTime.ToString("R"), TempRange = new TemperatureRange() { Maximum = r.Range.Max, Minimum = r.Range.Min } });
            }
            return ldt;
        }

        /// <summary>
        /// Returns a DateTemperatureRange for each day of the requested month
        /// </summary>
        /// <param name="year">The year part of the month whose temeprature ranges are
        /// requested</param>
        /// <param name="month">The month in the given year whose temperature ranges are
        /// requested</param>
        public List<DateTemperatures> GetTemperaturesByMonth(string stationId, int year, int month)
        {
            IDataService s = new XmlDataService();
            List<DateTemperatures> ldt = new List<DateTemperatures>();
            foreach (DateTemperatureRange r in s.GetTemperaturesByMonth(stationId, year, month))
            {
                ldt.Add(new DateTemperatures() { SubjectDate = r.RangeDateTime.ToString("R"), TempRange = new TemperatureRange() { Maximum = r.Range.Max, Minimum = r.Range.Min } });
            }
            return ldt;
        }

    }//end TemperatureService

}//end namespace DataService